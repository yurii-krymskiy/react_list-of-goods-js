{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORTED_BY_ALPHABET","SORTED_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","changedGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,OACrBC,EAAmB,SA2BZC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BiB,SAACC,EAAD,GAAuC,IAA7BL,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAOcO,CACnBlB,EACA,CACEK,YACAE,eASJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,SAAD,UAAsB,CACjC,WAAYjB,IAAcJ,IAJ9B,iCAUA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAD,aAAyB,CACpC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,QAAS,kBAAMZ,GAAc,SAAAe,GAAQ,OAAKA,MAC1CF,KAAK,SACLF,UAAWG,IAAG,SAAD,aAAyB,CACpC,YAAaf,IAJjB,qBAUCF,GAAaE,EAEV,wBACEa,QAAS,kBAxCnBd,EAAa,SACbE,GAAc,IAwCJa,KAAK,SACLF,UAAU,4BAHZ,mBAQA,MAIN,6BACGV,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5a52074.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORTED_BY_ALPHABET = 'name';\nconst SORTED_BY_LENGTH = 'length';\n\nconst getPreparedGoods = (goods, { sortField, isReversed }) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORTED_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORTED_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const changedGoods = getPreparedGoods(\n    goodsFromServer,\n    {\n      sortField,\n      isReversed,\n    },\n  );\n\n  const clearSort = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORTED_BY_ALPHABET)}\n          type=\"button\"\n          className={cn(`button`, `is-info`, {\n            'is-light': sortField !== SORTED_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORTED_BY_LENGTH)}\n          type=\"button\"\n          className={cn(`button`, `is-success`, {\n            'is-light': sortField !== SORTED_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(reversed => !reversed)}\n          type=\"button\"\n          className={cn(`button`, `is-warning`, {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed\n          ? (\n            <button\n              onClick={() => clearSort()}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          ) : (\n            ''\n          )}\n      </div>\n\n      <ul>\n        {changedGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}